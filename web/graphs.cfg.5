.TH GRAPHS.CFG 5 "Version 4.3.7: 13 Dec 2011" "Xymon"
.SH NAME
graphs.cfg \- Configuration of the showgraph CGI

.SH SYNOPSIS
.B $XYMONHOME/etc/graphs.cfg

.SH DESCRIPTION
.I showgraph.cgi(1)
uses the configuration file $XYMONHOME/etc/graphs.cfg to
build graphs from the RRD files collected by Xymon.

.SH FILE FORMAT
Each definition of a graph type begins with a "[SERVICE]" indicator,
this is the name passed as the "service" parameter to 
.I showgraph.cgi(1).
If the service name passed to showgraph.cgi is not found, it will
attempt to match the service name to a graph via the TEST2RRD environment
variable. So calling showgraph.cgi with "service=cpu" or "service=la"
will end up producing the same graph.

A graph definition needs to have a TITLE and a YAXIS setting. These are
texts shown as the title of the graph, and the YAXIS heading respectively.
(The X-axis is always time-based).

If a fixed set of RRD files are used for the graph, you just write those
in the RRDtool definitions. Note that Xymon keeps all RRD files for a host 
in a separate directory per host, so you need not worry about the hostname 
being part of the RRD filename.

For graphs that use multiple RRD files as input, you specify a filename
pattern in the FNPATTERN statement, and optionally a pattern of files
to exclude from the graph with EXFNPATTERN (see "[tcp]" for an example).
When FNPATTERN is used, you can use "@RRDFN@" in the RRDtool definitions
to pick up each filename. "@RRDIDX@" is an index (starting at 0) for each
file in the set. "@RRDPARAM@" contains the first word extracted from the
pattern of files (see e.g. "[memory]" how this is used). "@COLOR@" picks
a new color for each graph automatically.

The remainder of the lines in each definition are passed directly to the
RRDtool rrd_graph() routine.

The following is an example of how the "la" (cpu) graph is defined. This
is a simple definition that uses a single RRD-file, la.rrd:
.sp
[la]
.br
        TITLE CPU Load
.br
        YAXIS Load
.br
        DEF:avg=la.rrd:la:AVERAGE
.br
        CDEF:la=avg,100,/
.br
        AREA:la#00CC00:CPU Load Average
.br
        GPRINT:la:LAST: \: %5.1lf (cur)
.br
        GPRINT:la:MAX: \: %5.1lf (max)
.br
        GPRINT:la:MIN: \: %5.1lf (min)
.br
        GPRINT:la:AVERAGE: \: %5.1lf (avg)\n
.sp

Here is an example of a graph that uses multiple RRD-files, determined
automatically at run-time via the FNPATTERN setting. Note how it uses
the @RRDIDX@ to define a unique RRD parameter per input-file, and the
@COLOR@ and @RRDPARAM@ items to pick unique colors and a matching text
for the graph legend:
.sp
[disk]
.br
        FNPATTERN disk(.*).rrd
.br
        TITLE Disk Utilization
.br
        YAXIS % Full
.br
        DEF:p@RRDIDX@=@RRDFN@:pct:AVERAGE
.br
        LINE2:p@RRDIDX@#@COLOR@:@RRDPARAM@
.br
        -u 100
.br
        -l 0
.br
        GPRINT:p@RRDIDX@:LAST: \: %5.1lf (cur)
.br
        GPRINT:p@RRDIDX@:MAX: \: %5.1lf (max)
.br
        GPRINT:p@RRDIDX@:MIN: \: %5.1lf (min)
.br
        GPRINT:p@RRDIDX@:AVERAGE: \: %5.1lf (avg)\n

.SH ADVANCED GRAPH  TITLES
Normally the title of a graph is a static text defined in
the graphs.cfg file. However, there may be situations where
you want to use different titles for the same type of graph, e.g.
if you are incorporating RRD files from MRTG into Xymon. In that
case you can setup the TITLE definition so that it runs a custom
script to determine the graph title. Like this:
.sp
	TITLE exec:/usr/local/bin/graphitle
.sp
The \fB/usr/local/bin/graphtitle\fR command is then called with 
the hostname, the graphtype, the period string, and all of the 
RRD files used as parameters. The script must generate one line of output,
which is then used as the title of the graph.

.SH ENVIRONMENT
.BR TEST2RRD
Maps service names to graph definitions.

.SH NOTES
Most of the RRD graph definitions shipped with Xymon have been ported 
from the definitions in the \fBlarrd-grapher.cgi\fR CGI from LARRD 0.43c.

.SH "SEE ALSO"
xymonserver.cfg(5), rrdtool(1), rrdgraph(1)

